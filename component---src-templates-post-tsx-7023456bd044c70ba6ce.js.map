{"version":3,"sources":["webpack:///./src/templates/post.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.styles.ts","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx"],"names":["PostTemplate","_ref","markdownRemark","data","frontmatter","html","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","className","title","date","dangerouslySetInnerHTML","__html","pageQuery","m","module","exports","require","default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","GlobalStyles","name","styles","Header","siteTitle","core_browser_esm","style","background","margin","gatsby_browser_entry","to","color","textDecoration","defaultProps","Layout","children","_856328897","react_default","a","Fragment","header","site","siteMetadata","Date","getFullYear","href"],"mappings":"0MAIe,SAASA,EAATC,GAEZ,IACOC,EADPD,EADDE,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACEC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAAA,OAAKG,UAAU,uBACbH,OAAAC,EAAA,EAAAD,CAAA,OAAKG,UAAU,aACbH,OAAAC,EAAA,EAAAD,CAAA,UAAKF,EAAYM,OACjBJ,OAAAC,EAAA,EAAAD,CAAA,UAAKF,EAAYO,MACjBL,OAAAC,EAAA,EAAAD,CAAA,OACEG,UAAU,oBACVG,wBAAyB,CAAEC,OAAQR,QAQxC,IAAMS,EAAS,kCCzBtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,6HCctBK,QAAOC,QAELC,IAAMC,cAAc,4JCMhCC,UAjBU,SAAAvB,GAAiC,IAA9BwB,EAA8BxB,EAA9BwB,SAAUC,EAAoBzB,EAApByB,cACpC,OAAKA,EAGEJ,IAAMK,cAAcC,IAApBtB,OAAAuB,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,4ECLEC,EAAY,CAAAC,KAAA,SAAAC,OAAA,iqBCEnBC,EAAS,SAAAjC,GAAA,IAAGkC,EAAHlC,EAAGkC,UAAH,OACb7B,OAAA8B,EAAA,EAAA9B,CAAA,UAAQ+B,MAAO,CAAEC,WAAU,kBACzBhC,OAAA8B,EAAA,EAAA9B,CAAA,WACEA,OAAA8B,EAAA,EAAA9B,CAAA,MAAI+B,MAAO,CAAEE,OAAQ,IACnBjC,OAAA8B,EAAA,EAAA9B,CAACkC,EAAA,EAAD,CACEC,GAAG,IACHJ,MAAO,CACLK,MAAK,QACLC,eAAc,SAGfR,OAWXD,EAAOU,aAAe,CACpBT,UAAS,IAGID,QCiBAW,IA/BA,SAAA5C,GAAkB,IAAf6C,EAAe7C,EAAf6C,SACV3C,EAAO4C,EAAA5C,KAUb,OACEG,OAAA8B,EAAA,EAAA9B,CAAA0C,EAAAC,EAAAC,SAAA,KACE5C,OAAA8B,EAAA,EAAA9B,CAAC8B,EAAA,EAAD,CACEH,OAAQF,IAEVzB,OAAA8B,EAAA,EAAA9B,CAAC6C,EAAD,CAAQhB,UAAWhC,EAAKiD,KAAKC,aAAa3C,QAC1CJ,OAAA8B,EAAA,EAAA9B,CAAA,YAAOwC,GACPxC,OAAA8B,EAAA,EAAA9B,CAAA,oBACK,IAAIgD,MAAOC,cADhB,mBAGEjD,OAAA8B,EAAA,EAAA9B,CAAA,KAAGkD,KAAK,4BAAR","file":"component---src-templates-post-tsx-7023456bd044c70ba6ce.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default function PostTemplate({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <div className=\"blog-post-container\">\n        <div className=\"blog-post\">\n          <h1>{frontmatter.title}</h1>\n          <h2>{frontmatter.date}</h2>\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { css } from \"@emotion/core\"\n\nexport const GlobalStyles = css`\nhtml {\n  font-family: sans-serif;\n  -ms-text-size-adjust: 100%;\n  -webkit-text-size-adjust: 100%;\n}\nbody {\n\n}\nhtml {\n  font: 112.5%/1.45em georgia, serif;\n  box-sizing: border-box;\n  overflow-y: scroll;\n}\n* {\n  box-sizing: inherit;\n}\n*:before {\n  box-sizing: inherit;\n}\n*:after {\n  box-sizing: inherit;\n}\nbody {\n  margin: 0;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: hsla(0, 0%, 0%, 0.8);\n  font-family: georgia, serif;\n  font-weight: normal;\n  word-wrap: break-word;\n  font-kerning: normal;\n  -moz-font-feature-settings: \"kern\", \"liga\", \"clig\", \"calt\";\n  -ms-font-feature-settings: \"kern\", \"liga\", \"clig\", \"calt\";\n  -webkit-font-feature-settings: \"kern\", \"liga\", \"clig\", \"calt\";\n  font-feature-settings: \"kern\", \"liga\", \"clig\", \"calt\";\n}\n`\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header style={{ background: `rebeccapurple` }}>\n    <div>\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Global } from \"@emotion/core\"\n\nimport { GlobalStyles } from './layout.styles'\n\nimport Header from \"./header\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Global\n        styles={GlobalStyles}\n      />\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <main>{children}</main>\n      <footer>\n        Â© {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </footer>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}