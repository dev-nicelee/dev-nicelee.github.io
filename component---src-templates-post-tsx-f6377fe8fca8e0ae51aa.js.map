{"version":3,"sources":["webpack:///./src/templates/post.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.styles.ts","webpack:///./src/components/header.tsx","webpack:///./src/components/layout.tsx","webpack:///./node_modules/facepaint/dist/index.es.js"],"names":["PostTemplate","_ref","markdownRemark","data","frontmatter","html","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","className","date","title","dangerouslySetInnerHTML","__html","pageQuery","m","module","exports","require","default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","mq","facepaint","map","bp","GlobalStyles","css","padding","Header","siteTitle","core_browser_esm","style","background","margin","gatsby_browser_entry","to","color","textDecoration","defaultProps","Layout","children","_856328897","react_default","a","Fragment","styles","header","site","siteMetadata","__webpack_require__","__webpack_exports__","breakpoints","arguments","length","undefined","literal","overlap","concat","flatten","obj","Array","isArray","slots","objects","props","keys","forEach","key","item","charCodeAt","prior","v","index","_slots$mq$index","el","_len","values","_key"],"mappings":"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","file":"component---src-templates-post-tsx-f6377fe8fca8e0ae51aa.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default function PostTemplate({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <div className=\"blog-post-container\">\n        <div className=\"blog-post\">\n          <div className=\"posting-date\">{frontmatter.date}</div>\n          <h1>{frontmatter.title}</h1>\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { css } from \"@emotion/core\"\nimport facepaint from 'facepaint'\n\nconst breakpoints = [576, 768, 992, 1200]\n\nconst mq = facepaint(\n  breakpoints.map(bp => `@media (min-width: ${bp}px)`)\n)\n\nexport const GlobalStyles = css`\n\nhtml {\n  box-sizing: border-box;\n  overflow-y: scroll;\n}\n* {\n  box-sizing: inherit;\n}\n*:before {\n  box-sizing: inherit;\n}\n*:after {\n  box-sizing: inherit;\n}\nbody {\n  margin: 0;\n  word-wrap: break-word;\n}\n\na {\n  box-shadow: none;\n}\n\nh1, h2, h3, h4, h5, h6 {\n  margin-top: 1.82rem;\n}\n\n.page-wrapper {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\nmain {\n  flex: 1;\n}\n\n.gatsby-highlight {\n  pre {\n    border-radius: 5px;\n  }\n}\n\n:not(pre) > code[class*=\"language-\"] {\n  border-radius: 2px;\n  background-color: red;\n  color: #fff;\n}\n\n/* Adjust the position of the line numbers */\n.line-numbers-rows {\n  padding: 17px 0 17px 12px;\n}\n\n.blog-post {\n  ${mq({\n    padding: ['50px 25px', '50px 100px', '50px 100px', '50px 25%;']\n  })}\n}\n\n.posting-date {\n  color: rgba(0, 0, 0, 0.6);\n}\n`\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header style={{ background: `rebeccapurple` }}>\n    <div>\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Global } from \"@emotion/core\"\n\nimport { GlobalStyles } from './layout.styles'\n\nimport Header from \"./header\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Global\n        styles={GlobalStyles}\n      />\n      <div className='page-wrapper'>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main>{children}</main>\n        <footer>\n          © dev-nicelee\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.is-array\";\n\n/* eslint-disable no-param-reassign */\nvar index = function index(breakpoints) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      literal = _ref.literal,\n      overlap = _ref.overlap;\n\n  var mq = literal ? breakpoints : ['&'].concat(breakpoints);\n\n  function flatten(obj) {\n    if (typeof obj !== 'object' || obj == null) {\n      return [];\n    }\n\n    if (Array.isArray(obj)) {\n      return obj.map(flatten);\n    }\n\n    var slots = {};\n    var objects = {};\n    var props = {};\n    Object.keys(obj).forEach(function (key) {\n      // Check if value is an array, but skip if it looks like a selector.\n      // key.indexOf('&') === 0\n      var item = obj[key];\n      if (!Array.isArray(item) && literal) item = [item];\n\n      if ((literal || Array.isArray(item)) && key.charCodeAt(0) !== 38) {\n        var prior = void 0;\n        item.forEach(function (v, index) {\n          // Optimize by removing duplicated media query entries\n          // when they are explicitly known to overlap.\n          if (overlap && prior === v) {\n            return;\n          }\n\n          if (v == null) {\n            // Do not create entries for undefined values as this will\n            // generate empty media media quries\n            return;\n          }\n\n          prior = v;\n\n          if (index === 0 && !literal) {\n            props[key] = v;\n          } else if (slots[mq[index]] === undefined) {\n            var _slots$mq$index;\n\n            slots[mq[index]] = (_slots$mq$index = {}, _slots$mq$index[key] = v, _slots$mq$index);\n          } else {\n            slots[mq[index]][key] = v;\n          }\n        });\n      } else if (typeof item === 'object') {\n        objects[key] = flatten(item);\n      } else {\n        props[key] = item;\n      }\n    }); // Ensure that all slots and then child objects are pushed to the end\n\n    mq.forEach(function (el) {\n      if (slots[el]) {\n        props[el] = slots[el];\n      }\n    });\n    Object.assign(props, objects);\n    return props;\n  }\n\n  return function () {\n    for (var _len = arguments.length, values = Array(_len), _key = 0; _key < _len; _key++) {\n      values[_key] = arguments[_key];\n    }\n\n    return values.map(flatten);\n  };\n};\n\nexport default index;"],"sourceRoot":""}